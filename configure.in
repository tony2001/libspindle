dnl this files has to be processed by autoconf
AC_PREREQ(2.61)

AC_INIT([libspindle],[0.0.1])
AC_CONFIG_SRCDIR([README])
AC_CONFIG_SRCDIR(src/spindle.h)
AC_CONFIG_HEADERS(src/spindle_config.h)
AM_INIT_AUTOMAKE([no-define])
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
AC_PROG_LD

dnl we don't need C++ compiler
undefine([AC_PROG_CXX])
AC_DEFUN([AC_PROG_CXX], [])
undefine([AC_PROG_CXXCPP])
AC_DEFUN([AC_PROG_CXXCPP], [dummy_cxxcpp=disabled])

AM_PROG_LIBTOOL
AC_PROG_INSTALL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T

dnl Checks for header files.
AC_CHECK_HEADERS(string.h strings.h unistd.h stdint.h pthread.h)

MAJOR_VERSION=0
MINOR_VERSION=0
BUGFIX_VERSION=1
EXTRA_VERSION="-dev"

SPINDLE_VERSION_TEXT="${MAJOR_VERSION}.${MINOR_VERSION}.${BUGFIX_VERSION}${EXTRA_VERSION}"
SPINDLE_VERSION_ID=`expr [$]MAJOR_VERSION \* 10000 + [$]MINOR_VERSION \* 100 + [$]BUGFIX_VERSION`

dnl generate spindle_version.h {{{
echo "/* automatically generated by configure */" > spindle_version.h.new
echo "/* edit configure.in to change the version number */" >> spindle_version.h.new
echo "#define SPINDLE_MAJOR_VERSION $MAJOR_VERSION" >> spindle_version.h.new
echo "#define SPINDLE_MINOR_VERSION $MINOR_VERSION" >> spindle_version.h.new
echo "#define SPINDLE_BUGFIX_VERSION $BUGFIX_VERSION" >> spindle_version.h.new
echo "#define SPINDLE_EXTRA_VERSION \"$EXTRA_VERSION\"" >> spindle_version.h.new
echo "#define SPINDLE_VERSION_TEXT \"$SPINDLE_VERSION_TEXT\"" >> spindle_version.h.new
echo "#define SPINDLE_VERSION_ID $SPINDLE_VERSION_ID" >> spindle_version.h.new
cmp spindle_version.h.new $srcdir/src/spindle_version.h >/dev/null 2>&1
if test $? -ne 0 ; then
  rm -f $srcdir/src/spindle_version.h && mv spindle_version.h.new $srcdir/src/spindle_version.h && \
  echo 'Updated src/spindle_version.h'
else
  rm -f spindle_version.h.new
fi
dnl }}}

DEFAULT_INSTALL_PREFIX="/usr/local"

for pthread_lib in pthread pthreads c c_r; do
	AC_CHECK_LIB($pthread_lib, pthread_kill, found_pthread=yes, found_pthread=no)
	if test "$found_pthread" = "yes"; then 
		break; 
	fi
done

if test "$found_pthread" = "yes"; then
	case $pthread_lib in
		c)
		;;
		c_r)
			LIBS="-pthread $LIBS"
		;;
		*)
			LIBS="-l$pthread_lib $LIBS"
	   ;;
	esac
else
	AC_MSG_ERROR("Failed to find any pthread library in your system. Make sure it's available and try again")
fi

AC_ARG_ENABLE(debug,
  [AS_HELP_STRING([--enable-debug],[enable debugging symbols and compile flags])
  ],
  [
    if test x"$enableval" = xyes ; then
      debug="yes"
    else
      debug="no"
    fi
  ]
)

if test x"$debug" = xyes ; then
  AC_DEFINE([SPINDLE_DEBUG], [], [debug build])

  if test x"$GCC" = xyes; then

    dnl Remove any optimization flags from CFLAGS
    changequote({,})
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-O[0-9s]*//g'`
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-g[0-2]\? //g'`
    changequote([,])
    CFLAGS="$CFLAGS -g3 -Wall -O0"

  fi

  dnl Do not strip symbols from developer object files.
  INSTALL_STRIP_FLAG=""
else
  dnl Make sure to strip symbols from non-developer object files.
  INSTALL_STRIP_FLAG="-s"
fi

AC_SUBST(INSTALL_STRIP_FLAG)

AC_CONFIG_FILES([Makefile src/Makefile examples/Makefile])
AC_OUTPUT

